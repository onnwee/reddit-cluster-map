name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: reddit_cluster_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.9'
          cache: true
          cache-dependency-path: backend/go.sum

      - name: Verify dependencies
        working-directory: ./backend
        run: |
          go mod verify
          go mod download

      - name: Run go vet
        working-directory: ./backend
        run: go vet ./...

      - name: Run tests
        working-directory: ./backend
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/reddit_cluster_test?sslmode=disable
        run: go test -v -race -coverprofile=coverage.out ./...

      - name: Upload coverage
        uses: codecov/codecov-action@v4
        with:
          files: ./backend/coverage.out
          flags: backend
          name: backend-coverage
        continue-on-error: true

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run linter
        working-directory: ./frontend
        run: npm run lint || echo "Linting skipped - no lint script"
        continue-on-error: true

      - name: Run tests
        working-directory: ./frontend
        run: npm test || echo "Tests skipped - no test script"
        continue-on-error: true

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

  build-backend-images:
    name: Build Backend Docker Images
    runs-on: ubuntu-latest
    needs: [test-backend]
    
    strategy:
      matrix:
        component: [server, crawler, precalculate]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get Docker file name
        id: dockerfile
        run: |
          if [ "${{ matrix.component }}" = "server" ]; then
            echo "file=Dockerfile" >> $GITHUB_OUTPUT
          else
            echo "file=Dockerfile.${{ matrix.component }}" >> $GITHUB_OUTPUT
          fi

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/${{ steps.dockerfile.outputs.file }}
          push: false
          tags: reddit-cluster-${{ matrix.component }}:${{ github.sha }}
          build-args: |
            VERSION=${{ github.ref_name }}
            COMMIT=${{ github.sha }}
            BUILD_TIME=${{ github.event.head_commit.timestamp }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-frontend-image:
    name: Build Frontend Docker Image
    runs-on: ubuntu-latest
    needs: [test-frontend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: reddit-cluster-frontend:${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
